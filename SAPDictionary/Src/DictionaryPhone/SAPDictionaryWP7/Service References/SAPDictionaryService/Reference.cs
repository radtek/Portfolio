//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Johnny.WP7.Dictionary.SAPDictionaryService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://tempuri.org/", ItemName="string")]
    public class ArrayOfString : System.Collections.ObjectModel.Collection<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SAPDictionaryService.SAPDictionarySoap")]
    public interface SAPDictionarySoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FindTheWord", ReplyAction="*")]
        System.IAsyncResult BeginFindTheWord(Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordRequest request, System.AsyncCallback callback, object asyncState);
        
        Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordResponse EndFindTheWord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FindAllWords", ReplyAction="*")]
        System.IAsyncResult BeginFindAllWords(Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsRequest request, System.AsyncCallback callback, object asyncState);
        
        Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsResponse EndFindAllWords(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/FindWordsByAlphabet", ReplyAction="*")]
        System.IAsyncResult BeginFindWordsByAlphabet(Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetRequest request, System.AsyncCallback callback, object asyncState);
        
        Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetResponse EndFindWordsByAlphabet(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindTheWordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindTheWord", Namespace="http://tempuri.org/", Order=0)]
        public Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordRequestBody Body;
        
        public FindTheWordRequest() {
        }
        
        public FindTheWordRequest(Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class FindTheWordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string language;
        
        public FindTheWordRequestBody() {
        }
        
        public FindTheWordRequestBody(string name, string language) {
            this.name = name;
            this.language = language;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindTheWordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindTheWordResponse", Namespace="http://tempuri.org/", Order=0)]
        public Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordResponseBody Body;
        
        public FindTheWordResponse() {
        }
        
        public FindTheWordResponse(Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class FindTheWordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString FindTheWordResult;
        
        public FindTheWordResponseBody() {
        }
        
        public FindTheWordResponseBody(Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString FindTheWordResult) {
            this.FindTheWordResult = FindTheWordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindAllWordsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindAllWords", Namespace="http://tempuri.org/", Order=0)]
        public Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsRequestBody Body;
        
        public FindAllWordsRequest() {
        }
        
        public FindAllWordsRequest(Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class FindAllWordsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string name;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string language;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int top;
        
        public FindAllWordsRequestBody() {
        }
        
        public FindAllWordsRequestBody(string name, string language, int top) {
            this.name = name;
            this.language = language;
            this.top = top;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindAllWordsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindAllWordsResponse", Namespace="http://tempuri.org/", Order=0)]
        public Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsResponseBody Body;
        
        public FindAllWordsResponse() {
        }
        
        public FindAllWordsResponse(Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class FindAllWordsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString FindAllWordsResult;
        
        public FindAllWordsResponseBody() {
        }
        
        public FindAllWordsResponseBody(Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString FindAllWordsResult) {
            this.FindAllWordsResult = FindAllWordsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindWordsByAlphabetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindWordsByAlphabet", Namespace="http://tempuri.org/", Order=0)]
        public Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetRequestBody Body;
        
        public FindWordsByAlphabetRequest() {
        }
        
        public FindWordsByAlphabetRequest(Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class FindWordsByAlphabetRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public char letter;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string language;
        
        public FindWordsByAlphabetRequestBody() {
        }
        
        public FindWordsByAlphabetRequestBody(char letter, string language) {
            this.letter = letter;
            this.language = language;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindWordsByAlphabetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindWordsByAlphabetResponse", Namespace="http://tempuri.org/", Order=0)]
        public Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetResponseBody Body;
        
        public FindWordsByAlphabetResponse() {
        }
        
        public FindWordsByAlphabetResponse(Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class FindWordsByAlphabetResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString FindWordsByAlphabetResult;
        
        public FindWordsByAlphabetResponseBody() {
        }
        
        public FindWordsByAlphabetResponseBody(Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString FindWordsByAlphabetResult) {
            this.FindWordsByAlphabetResult = FindWordsByAlphabetResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SAPDictionarySoapChannel : Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindTheWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindTheWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindAllWordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindAllWordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindWordsByAlphabetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindWordsByAlphabetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SAPDictionarySoapClient : System.ServiceModel.ClientBase<Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap>, Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap {
        
        private BeginOperationDelegate onBeginFindTheWordDelegate;
        
        private EndOperationDelegate onEndFindTheWordDelegate;
        
        private System.Threading.SendOrPostCallback onFindTheWordCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindAllWordsDelegate;
        
        private EndOperationDelegate onEndFindAllWordsDelegate;
        
        private System.Threading.SendOrPostCallback onFindAllWordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindWordsByAlphabetDelegate;
        
        private EndOperationDelegate onEndFindWordsByAlphabetDelegate;
        
        private System.Threading.SendOrPostCallback onFindWordsByAlphabetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SAPDictionarySoapClient() {
        }
        
        public SAPDictionarySoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SAPDictionarySoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SAPDictionarySoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SAPDictionarySoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<FindTheWordCompletedEventArgs> FindTheWordCompleted;
        
        public event System.EventHandler<FindAllWordsCompletedEventArgs> FindAllWordsCompleted;
        
        public event System.EventHandler<FindWordsByAlphabetCompletedEventArgs> FindWordsByAlphabetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap.BeginFindTheWord(Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindTheWord(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginFindTheWord(string name, string language, System.AsyncCallback callback, object asyncState) {
            Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordRequest inValue = new Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordRequest();
            inValue.Body = new Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordRequestBody();
            inValue.Body.name = name;
            inValue.Body.language = language;
            return ((Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap)(this)).BeginFindTheWord(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordResponse Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap.EndFindTheWord(System.IAsyncResult result) {
            return base.Channel.EndFindTheWord(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString EndFindTheWord(System.IAsyncResult result) {
            Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordResponse retVal = ((Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap)(this)).EndFindTheWord(result);
            return retVal.Body.FindTheWordResult;
        }
        
        private System.IAsyncResult OnBeginFindTheWord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string language = ((string)(inValues[1]));
            return this.BeginFindTheWord(name, language, callback, asyncState);
        }
        
        private object[] OnEndFindTheWord(System.IAsyncResult result) {
            Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString retVal = this.EndFindTheWord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindTheWordCompleted(object state) {
            if ((this.FindTheWordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindTheWordCompleted(this, new FindTheWordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindTheWordAsync(string name, string language) {
            this.FindTheWordAsync(name, language, null);
        }
        
        public void FindTheWordAsync(string name, string language, object userState) {
            if ((this.onBeginFindTheWordDelegate == null)) {
                this.onBeginFindTheWordDelegate = new BeginOperationDelegate(this.OnBeginFindTheWord);
            }
            if ((this.onEndFindTheWordDelegate == null)) {
                this.onEndFindTheWordDelegate = new EndOperationDelegate(this.OnEndFindTheWord);
            }
            if ((this.onFindTheWordCompletedDelegate == null)) {
                this.onFindTheWordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindTheWordCompleted);
            }
            base.InvokeAsync(this.onBeginFindTheWordDelegate, new object[] {
                        name,
                        language}, this.onEndFindTheWordDelegate, this.onFindTheWordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap.BeginFindAllWords(Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindAllWords(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginFindAllWords(string name, string language, int top, System.AsyncCallback callback, object asyncState) {
            Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsRequest inValue = new Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsRequest();
            inValue.Body = new Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsRequestBody();
            inValue.Body.name = name;
            inValue.Body.language = language;
            inValue.Body.top = top;
            return ((Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap)(this)).BeginFindAllWords(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsResponse Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap.EndFindAllWords(System.IAsyncResult result) {
            return base.Channel.EndFindAllWords(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString EndFindAllWords(System.IAsyncResult result) {
            Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsResponse retVal = ((Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap)(this)).EndFindAllWords(result);
            return retVal.Body.FindAllWordsResult;
        }
        
        private System.IAsyncResult OnBeginFindAllWords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string language = ((string)(inValues[1]));
            int top = ((int)(inValues[2]));
            return this.BeginFindAllWords(name, language, top, callback, asyncState);
        }
        
        private object[] OnEndFindAllWords(System.IAsyncResult result) {
            Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString retVal = this.EndFindAllWords(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindAllWordsCompleted(object state) {
            if ((this.FindAllWordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindAllWordsCompleted(this, new FindAllWordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindAllWordsAsync(string name, string language, int top) {
            this.FindAllWordsAsync(name, language, top, null);
        }
        
        public void FindAllWordsAsync(string name, string language, int top, object userState) {
            if ((this.onBeginFindAllWordsDelegate == null)) {
                this.onBeginFindAllWordsDelegate = new BeginOperationDelegate(this.OnBeginFindAllWords);
            }
            if ((this.onEndFindAllWordsDelegate == null)) {
                this.onEndFindAllWordsDelegate = new EndOperationDelegate(this.OnEndFindAllWords);
            }
            if ((this.onFindAllWordsCompletedDelegate == null)) {
                this.onFindAllWordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindAllWordsCompleted);
            }
            base.InvokeAsync(this.onBeginFindAllWordsDelegate, new object[] {
                        name,
                        language,
                        top}, this.onEndFindAllWordsDelegate, this.onFindAllWordsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap.BeginFindWordsByAlphabet(Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindWordsByAlphabet(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginFindWordsByAlphabet(char letter, string language, System.AsyncCallback callback, object asyncState) {
            Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetRequest inValue = new Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetRequest();
            inValue.Body = new Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetRequestBody();
            inValue.Body.letter = letter;
            inValue.Body.language = language;
            return ((Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap)(this)).BeginFindWordsByAlphabet(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetResponse Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap.EndFindWordsByAlphabet(System.IAsyncResult result) {
            return base.Channel.EndFindWordsByAlphabet(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString EndFindWordsByAlphabet(System.IAsyncResult result) {
            Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetResponse retVal = ((Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap)(this)).EndFindWordsByAlphabet(result);
            return retVal.Body.FindWordsByAlphabetResult;
        }
        
        private System.IAsyncResult OnBeginFindWordsByAlphabet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            char letter = ((char)(inValues[0]));
            string language = ((string)(inValues[1]));
            return this.BeginFindWordsByAlphabet(letter, language, callback, asyncState);
        }
        
        private object[] OnEndFindWordsByAlphabet(System.IAsyncResult result) {
            Johnny.WP7.Dictionary.SAPDictionaryService.ArrayOfString retVal = this.EndFindWordsByAlphabet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindWordsByAlphabetCompleted(object state) {
            if ((this.FindWordsByAlphabetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindWordsByAlphabetCompleted(this, new FindWordsByAlphabetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindWordsByAlphabetAsync(char letter, string language) {
            this.FindWordsByAlphabetAsync(letter, language, null);
        }
        
        public void FindWordsByAlphabetAsync(char letter, string language, object userState) {
            if ((this.onBeginFindWordsByAlphabetDelegate == null)) {
                this.onBeginFindWordsByAlphabetDelegate = new BeginOperationDelegate(this.OnBeginFindWordsByAlphabet);
            }
            if ((this.onEndFindWordsByAlphabetDelegate == null)) {
                this.onEndFindWordsByAlphabetDelegate = new EndOperationDelegate(this.OnEndFindWordsByAlphabet);
            }
            if ((this.onFindWordsByAlphabetCompletedDelegate == null)) {
                this.onFindWordsByAlphabetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindWordsByAlphabetCompleted);
            }
            base.InvokeAsync(this.onBeginFindWordsByAlphabetDelegate, new object[] {
                        letter,
                        language}, this.onEndFindWordsByAlphabetDelegate, this.onFindWordsByAlphabetCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap CreateChannel() {
            return new SAPDictionarySoapClientChannel(this);
        }
        
        private class SAPDictionarySoapClientChannel : ChannelBase<Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap>, Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap {
            
            public SAPDictionarySoapClientChannel(System.ServiceModel.ClientBase<Johnny.WP7.Dictionary.SAPDictionaryService.SAPDictionarySoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginFindTheWord(Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("FindTheWord", _args, callback, asyncState);
                return _result;
            }
            
            public Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordResponse EndFindTheWord(System.IAsyncResult result) {
                object[] _args = new object[0];
                Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordResponse _result = ((Johnny.WP7.Dictionary.SAPDictionaryService.FindTheWordResponse)(base.EndInvoke("FindTheWord", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindAllWords(Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("FindAllWords", _args, callback, asyncState);
                return _result;
            }
            
            public Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsResponse EndFindAllWords(System.IAsyncResult result) {
                object[] _args = new object[0];
                Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsResponse _result = ((Johnny.WP7.Dictionary.SAPDictionaryService.FindAllWordsResponse)(base.EndInvoke("FindAllWords", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindWordsByAlphabet(Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("FindWordsByAlphabet", _args, callback, asyncState);
                return _result;
            }
            
            public Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetResponse EndFindWordsByAlphabet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetResponse _result = ((Johnny.WP7.Dictionary.SAPDictionaryService.FindWordsByAlphabetResponse)(base.EndInvoke("FindWordsByAlphabet", _args, result)));
                return _result;
            }
        }
    }
}
